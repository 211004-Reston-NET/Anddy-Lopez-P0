// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P0DL;

namespace P0DL.Migrations
{
    [DbContext(typeof(P0DatabaseContext))]
    [Migration("20211105181623_AddedCustomerModelandView")]
    partial class AddedCustomerModelandView
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("P0Models.Customers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cust_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cust_address");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cust_email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cust_name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cust_phonenumber");

                    b.HasKey("Id")
                        .HasName("PK__Customer__A1B71F90DDEFF9CE");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("P0Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("inv_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("inv_product");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("inv_quantity");

                    b.Property<int>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("store_id");

                    b.HasKey("Id")
                        .HasName("PK__Inventor__A8749C29C4B81E06");

                    b.HasIndex("StoreId");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("P0Models.LineItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("li_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("li_product");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("li_quantity");

                    b.HasKey("Id")
                        .HasName("PK__LineItem__1A6BDF65975CEFB2");

                    b.HasIndex("OrderId");

                    b.ToTable("LineItem");
                });

            modelBuilder.Entity("P0Models.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustId")
                        .HasColumnType("int")
                        .HasColumnName("cust_id");

                    b.Property<string>("SLocation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("order_address");

                    b.Property<int>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("store_id");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int")
                        .HasColumnName("order_price");

                    b.HasKey("Id")
                        .HasName("PK__MyOrder__46596229FA8A6998");

                    b.HasIndex("CustId");

                    b.HasIndex("StoreId");

                    b.ToTable("MyOrder");
                });

            modelBuilder.Entity("P0Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("prod_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InvId")
                        .HasColumnType("int")
                        .HasColumnName("inv_id");

                    b.Property<int>("LiId")
                        .HasColumnType("int")
                        .HasColumnName("li_id");

                    b.Property<string>("PName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("prod_name");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("prod_price");

                    b.HasKey("Id")
                        .HasName("PK__Product__56958AB2AC479E44");

                    b.HasIndex("InvId");

                    b.HasIndex("LiId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("P0Models.StoreFronts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("store_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("store_address");

                    b.Property<string>("SName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("store_name");

                    b.HasKey("Id")
                        .HasName("PK__StoreFro__A2F2A30CFE7A5882");

                    b.ToTable("StoreFront");
                });

            modelBuilder.Entity("P0Models.Inventory", b =>
                {
                    b.HasOne("P0Models.StoreFronts", "StoreFronts")
                        .WithMany("Inventory")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK__Inventory__store__3F115E1A")
                        .IsRequired();

                    b.Navigation("StoreFronts");
                });

            modelBuilder.Entity("P0Models.LineItems", b =>
                {
                    b.HasOne("P0Models.Orders", "Orders")
                        .WithMany("LineItems")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__LineItem__order___41EDCAC5");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("P0Models.Orders", b =>
                {
                    b.HasOne("P0Models.Customers", "Customers")
                        .WithMany("Orders")
                        .HasForeignKey("CustId")
                        .HasConstraintName("FK__MyOrder__cust_id__151B244E")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P0Models.StoreFronts", "StoreFronts")
                        .WithMany("Orders")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK__MyOrder__store_i__160F4887")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");

                    b.Navigation("StoreFronts");
                });

            modelBuilder.Entity("P0Models.Products", b =>
                {
                    b.HasOne("P0Models.Inventory", "Inventory")
                        .WithMany("Products")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK__Product__inv_id__503BEA1C")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P0Models.LineItems", "LineItems")
                        .WithMany("Products")
                        .HasForeignKey("LiId")
                        .HasConstraintName("FK__Product__li_id__51300E55")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("LineItems");
                });

            modelBuilder.Entity("P0Models.Customers", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("P0Models.Inventory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("P0Models.LineItems", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("P0Models.Orders", b =>
                {
                    b.Navigation("LineItems");
                });

            modelBuilder.Entity("P0Models.StoreFronts", b =>
                {
                    b.Navigation("Inventory");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
